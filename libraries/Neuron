package MachineLearning.Libraries;

import java.util.Random;

public class Neuron {
    double[] weights;
    double C;
    public Neuron(int inputs, double c){
        weights = new double[inputs + 1];
        C = c;

        for (int i = 0; i < weights.length; i++) {
            weights[i] = 2 * new Random().nextDouble()-1;
        }
    }

    public void train(double[] inputs, double desired) {
        double guess = feedforward(inputs);
        double error = desired - guess;
        for (int i = 0; i < weights.length; i++) {
          weights[i] += C * error * inputs[i];
        }
    }

    public double feedforward(double[] inputs) {
        double sum = 0;
        for (int i = 0; i < weights.length; i++) {
            sum += inputs[i] * weights[i];
        }
        return activate(sum);
    }

    public double activate(double sum) {
        return (1 / (1 + Math.exp(-sum)));
    }

    public void printWeights() {
        System.out.print(weights[0]);
        for (int i = 1; i < weights.length; i++){
            System.out.print(", ");
            System.out.print(weights[i]);
        }
        System.out.println();
    }

    public void printFormulaEstimate() {
        System.out.print("y = ");
        System.out.print(-Math.round(weights[0]/weights[1]));
        System.out.print("x + ");
        double b = -Math.round(10*(weights[2]/weights[1]))/10.0;
        System.out.print(b);
    }
}
